rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Todos collection rules
    match /todos/{todoId} {
      // Allow read if user is authenticated and owns the todo
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;

      // Allow create if user is authenticated and sets themselves as the owner
      allow create: if isAuthenticated()
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.keys().hasAll(['userId', 'description', 'completed', 'date', 'createdAt', 'updatedAt'])
        && request.resource.data.completed is bool
        && request.resource.data.description is string
        && request.resource.data.description.size() > 0;

      // Allow update if user owns the todo and doesn't change userId
      allow update: if isOwner(resource.data.userId)
        && request.resource.data.userId == resource.data.userId;

      // Allow delete if user owns the todo
      allow delete: if isOwner(resource.data.userId);
    }

    // Profiles collection rules
    match /profiles/{userId} {
      // Allow read only if user is reading their own profile
      allow read: if isAuthenticated() && request.auth.uid == userId;

      // Allow create only if user is creating their own profile
      allow create: if isAuthenticated() && request.auth.uid == userId;

      // Allow update only if user is updating their own profile
      // IMPORTANT: Prevent clients from modifying 'subscription' field (Cloud Functions only)
      allow update: if isAuthenticated()
        && request.auth.uid == userId
        && (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['subscription']));

      // Allow delete only if user is deleting their own profile
      allow delete: if isAuthenticated() && request.auth.uid == userId;

      // Payments subcollection rules
      match /payments/{paymentId} {
        // Allow read if user owns the parent profile
        allow read: if isAuthenticated() && request.auth.uid == userId;
        // Cloud Functions only (no write access for clients)
        allow write: if false;
      }
    }

    // Activity collection rules
    match /activity/{activityId} {
      // Allow read if user is authenticated and owns the activity document
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;

      // Allow update only of aiSummary field (for editing in Monday dialog)
      // Other fields can only be modified by Cloud Functions
      allow update: if isAuthenticated()
        && resource.data.userId == request.auth.uid
        && request.resource.data.userId == resource.data.userId
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['aiSummary']);

      // Cloud Functions only (no create/delete access for clients)
      allow create, delete: if false;
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
